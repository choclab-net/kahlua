"""
Django settings for kahlua project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import json
from collections import namedtuple
from django.utils.crypto import get_random_string

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)

CONFIG = None
SETTINGS_FILE = os.path.expanduser('~/etc/kahlua.json')

empty_settings = {
    "dbhost": "",
    "dbuser": "",
    "dbpass": "",
    "dbname": "",
    "secret": "{}".format(
        get_random_string(
            50,
            ('abcdefghijklmnopqrstuvwxyz'
             + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
             + '0123456789!@#$%^&*(-_=+)')
        )
    )
}
if not os.path.exists(SETTINGS_FILE):
    print("Creating empty settings file at {}".format(SETTINGS_FILE))
    with open(SETTINGS_FILE, 'w') as fp:
        json.dump(empty_settings, fp, indent=4)

with open(SETTINGS_FILE) as fp:
    print("Loading settings from file:  {}".format(SETTINGS_FILE))
    dictionary = json.load(fp)
    CONFIG = namedtuple('Config', dictionary.keys())(**dictionary)

DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
# STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

AWS_ACCESS_KEY_ID = CONFIG.aws_access_key
AWS_SECRET_ACCESS_KEY = CONFIG.aws_secret_key
AWS_STORAGE_BUCKET_NAME = CONFIG.aws_bucket
AWS_QUERYSTRING_AUTH = False
AWS_S3_CUSTOM_DOMAIN = AWS_STORAGE_BUCKET_NAME + '.s3.amazonaws.com'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'home',
    'search',
    'blog',
    'storages',

    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',

    "wagtail.contrib.routable_page",

    'modelcluster',
    'taggit',
    'treebeard',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'taggit_templatetags2',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'wagtail.core.middleware.SiteMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'kahlua.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kahlua.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'mysql.connector.django',
        'NAME': CONFIG.dbname,
        'USER': CONFIG.dbuser,
        'HOST': CONFIG.dbhost,
        'PASSWORD': CONFIG.dbpass,
        'OPTIONS': {
            'autocommit': True,
            'use_pure': True,   # Required for shared hosting
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': ('django.contrib.auth'
                 + '.password_validation'
                 + '.UserAttributeSimilarityValidator'),
    },
    {
        'NAME': ('django.contrib.auth.'
                 + 'password_validation'
                 + '.MinimumLengthValidator'),
    },
    {
        'NAME': ('django.contrib.auth.'
                 + 'password_validation'
                 + '.CommonPasswordValidator'),
    },
    {
        'NAME': ('django.contrib.auth.'
                 + 'password_validation'
                 + '.NumericPasswordValidator'),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SECRET_KEY = CONFIG.secret

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

STATICFILES_STORAGE = (
    'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
)

STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'https://{}/'.format(AWS_S3_CUSTOM_DOMAIN)


# Wagtail settings

WAGTAIL_SITE_NAME = "kahlua"

# Base URL to use when referring to full URLs within the Wagtail admin backend
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'http://kahlua.choclab.net'
